{"config":{"lang":["en","de","es","it","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>The home page (index.md) is your project's welcome mat. It should be concise and compelling. Include:</p>"},{"location":"#a-catchy-title","title":"A Catchy Title","text":"<p>The project's name.</p>"},{"location":"#a-brief-description","title":"A Brief Description","text":"<p>What the project does.</p>"},{"location":"#key-features","title":"Key Features","text":"<p>A bulleted list of the main functionalities.</p> <ul> <li>Feature 1</li> <li>Feature 2</li> <li>Feature 3</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>A single, copy-and-paste command to get started.</p> <pre><code>/docs\n\u251c\u2500\u2500 about/\n\u2502 \u251c\u2500\u2500 index.md # Includes license info, etc.\n\u2502 \u2514\u2500\u2500 changelog.md # Can be a manual file or a link\n\u251c\u2500\u2500 api-reference.md # Auto-generated via mkdocstrings\n\u251c\u2500\u2500 assets/\n\u2502 \u2514\u2500\u2500 images/\n\u251c\u2500\u2500 community/\n\u2502 \u251c\u2500\u2500 code_of_conduct.md\n\u2502 \u251c\u2500\u2500 contributing.md\n\u2502 \u2514\u2500\u2500 faq.md\n\u251c\u2500\u2500 css/\n\u2502 \u2514\u2500\u2500 custom.css\n\u251c\u2500\u2500 developer-guide/\n\u2502 \u2514\u2500\u2500 index.md # Main page for dev setup, architecture, etc.\n\u251c\u2500\u2500 getting-started/\n\u2502 \u2514\u2500\u2500 index.md # Installation and quick start\n\u251c\u2500\u2500 includes/\n\u2502 \u2514\u2500\u2500 abbreviations.md\n\u251c\u2500\u2500 index.md # The main landing page\n\u2514\u2500\u2500 user-guide/\n\u2514\u2500\u2500 index.md # All user-facing features and guides\n</code></pre>"},{"location":"api-reference/","title":"Api-Reference","text":""},{"location":"api-reference/#api-reference","title":"API reference","text":"<p>This is a crucial part of a Python project's documentation. It should be auto generated from your docstrings.</p>"},{"location":"api-reference/#tool","title":"Tool","text":"<p>Use a plugin like mkdocstrings-python with griffe. This reads your docstrings and creates a full, searchable API reference.</p>"},{"location":"api-reference/#structure","title":"Structure","text":"<p>The API reference should be organized by module, class, and function. Each entry should include the function signature, parameters, and a description.</p> <pre><code>::: jm_python_template\noptions:\nshow_submodules: true\n</code></pre> <p>options: show_submodules: true</p>"},{"location":"api-reference/#jm_python_template","title":"jm_python_template","text":""},{"location":"api-reference/#jm_python_template-modules","title":"Modules","text":""},{"location":"api-reference/#jm_python_template.app","title":"app","text":""},{"location":"api-reference/#jm_python_template.app-functions","title":"Functions","text":""},{"location":"api-reference/#jm_python_template.app.docs","title":"docs","text":"<pre><code>docs(name: str = typer.Option(..., help='The name of the project')) -&gt; None\n</code></pre> <p>Generate docs for a project.</p>"},{"location":"api-reference/#jm_python_template.app.hello","title":"hello","text":"<pre><code>hello(name: Annotated[str, Argument(..., help='The name of the person to greet')], color: Annotated[str | None, Option(--color, help='The color of the output')] = None) -&gt; None\n</code></pre> <p>Some docstring content.</p>"},{"location":"api-reference/#jm_python_template.buildprocess","title":"buildprocess","text":""},{"location":"api-reference/#jm_python_template.buildprocess-modules","title":"Modules","text":""},{"location":"api-reference/#jm_python_template.buildprocess.core","title":"core","text":"<p>Example build process functions for testing coverage and pytest.</p> Functions\u00b6 add \u00b6 <pre><code>add(a: int, b: int) -&gt; int\n</code></pre> <p>Return the sum of two integers.</p> build_pipeline \u00b6 <pre><code>build_pipeline(steps: list[str]) -&gt; str\n</code></pre> <p>Simulate a build pipeline.</p> <p>Parameters:</p> Name Type Description Default <code>steps</code> <code>list[str]</code> <p>A list of build step names.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A string summary of the pipeline execution.</p> conditional_process \u00b6 <pre><code>conditional_process(*, flag: bool) -&gt; str\n</code></pre> <p>Run a conditional process depending on the flag.</p> divide \u00b6 <pre><code>divide(a: float, b: float) -&gt; float\n</code></pre> <p>Divide <code>a</code> by <code>b</code>.</p> <p>Raises:</p> Type Description <code>ZeroDivisionError</code> <p>If <code>b</code> is zero.</p>"},{"location":"api-reference/#jm_python_template.main","title":"main","text":""},{"location":"api-reference/#jm_python_template.main-functions","title":"Functions","text":""},{"location":"api-reference/#jm_python_template.main.comma","title":"comma","text":"<pre><code>comma(name: Annotated[str, Option()] = 'World', _version: Annotated[bool | None, Option(--version, callback=version_callback)] = None) -&gt; None\n</code></pre> <p>Main function of the application.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name to greet.</p> <code>'World'</code> <code>_version</code> <code>Optional[bool]</code> <p>Whether to print the version.</p> <code>None</code> <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"api-reference/#jm_python_template.main.version_callback","title":"version_callback","text":"<pre><code>version_callback(*, value: bool) -&gt; None\n</code></pre> <p>Print the version and exit.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>bool</code> <p>Whether to print the version.</p> required <p>Returns:</p> Type Description <code>None</code> <p>None</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#about","title":"About","text":"<p>Finally, this section provides context and legal information.</p>"},{"location":"about/#license","title":"License","text":"<p>jm-python-template is licensed under the European Union Public License.</p>"},{"location":"about/#authors","title":"Authors","text":"<p>Authors ordered by first contribution.</p> <p>J\u00fcrgen M\u00fclbert juergen.muelbert@outlook.de</p>"},{"location":"about/changelog/","title":"Changelog","text":""},{"location":"about/changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. For a complete and detailed list of changes, please refer to the GitHub Releases page.</p>"},{"location":"about/changelog/#unreleased","title":"[Unreleased]","text":""},{"location":"about/changelog/#added","title":"Added","text":"<ul> <li>Rewrote gh-workflows</li> <li>Add extra javascript-files from workflows.</li> <li>Add stale-issue workflow. Extracted from issue-management wf.</li> </ul>"},{"location":"about/changelog/#fixed","title":"Fixed","text":""},{"location":"about/changelog/#removed","title":"Removed","text":""},{"location":"about/changelog/#002-2025-09-19","title":"[0.0.2] - 2025-09-19","text":""},{"location":"about/changelog/#added_1","title":"Added","text":"<ul> <li>Added all workflows now</li> </ul>"},{"location":"about/changelog/#001-2025-09-15","title":"[0.0.1] - 2025-09-15","text":""},{"location":"about/changelog/#added_2","title":"Added","text":"<ul> <li>Initial project setup</li> </ul> <p>&lt;!-- End &gt;</p>"},{"location":"community/code_of_conduct/","title":"Code of Conduct","text":""},{"location":"community/code_of_conduct/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"community/code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socioeconomic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"community/code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our   mistakes, and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political   attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"community/code_of_conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"community/code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"community/code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at J\u00fcrgen M\u00fclbert. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"community/code_of_conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"community/code_of_conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"community/code_of_conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"community/code_of_conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"community/code_of_conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"community/code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"community/contributing/","title":"Contributing","text":""},{"location":"community/contributing/#contributing-to-jm-python-template","title":"Contributing to jm-python-template","text":"<p>First off, thank you for considering contributing to jm-python-template! \ud83c\udf89</p> <p>We welcome contributions of all kinds \u2014 code, documentation, testing, translations, and ideas.</p> <p>This guide will walk you through the process.</p>"},{"location":"community/contributing/#code-of-conduct","title":"\ud83d\udcdc Code of Conduct","text":"<p>This project follows the Contributor Covenant Code of Conduct v2.1. By participating, you are expected to uphold this code. Please report unacceptable behavior to the maintainers.</p>"},{"location":"community/contributing/#getting-started","title":"\ud83d\ude80 Getting Started","text":""},{"location":"community/contributing/#1-fork-clone","title":"1. Fork &amp; Clone","text":"<p>Fork the repository via GitHub and clone your fork locally:</p> <pre><code>git clone https://github.com/your-username/jm-python-template.git\ncd jm-python-template\n</code></pre>"},{"location":"community/contributing/#development-environment","title":"Development Environment","text":"<p>We use Hatch for environment and project management.</p> <p>Enter the development environment with:</p> <pre><code>hatch shell\n</code></pre> <p>Run the tests to verify everything works:</p> <pre><code>   hatch test\n</code></pre> <p>or</p> <pre><code>   hatch run test:test\n</code></pre>"},{"location":"community/contributing/#optional-using-task","title":"Optional: Using <code>Task</code>","text":"<p>If you have <code>Task</code> installed, you can simplify common commands:</p> <pre><code>task test\ntask translate-source\n</code></pre>"},{"location":"community/contributing/#documentation","title":"Documentation","text":"<p>Documentation is built with MkDocs. Preview locally with:</p> <pre><code>   hatch run docs:serve\n</code></pre>"},{"location":"community/contributing/#how-to-contribute","title":"\u2705 How to Contribute","text":""},{"location":"community/contributing/#reporting-bugs","title":"Reporting Bugs \ud83d\udc1b","text":"<ul> <li>Use the GitHub Issues page.</li> <li>Include details:</li> <li>Steps to reproduce</li> <li>Expected behavior</li> <li>Actual behavior</li> <li>Environment (OS, Python version, dependencies)</li> </ul>"},{"location":"community/contributing/#suggesting-features","title":"Suggesting Features \ud83d\udca1","text":"<ul> <li>Open a Feature Request issue.</li> <li>Explain the problem, proposed solution, and alternatives considered.</li> </ul>"},{"location":"community/contributing/#submitting-changes","title":"Submitting Changes \ud83d\udcdd","text":"<ol> <li> <p>Fork the repository.</p> </li> <li> <p>Create a new branch.</p> </li> </ol> <p>Use a clear, descriptive name for your branch.</p> <pre><code>    git checkout -b feature/your-feature-name\n</code></pre> <ol> <li> <p>Make your changes.</p> </li> <li> <p>Ensure all tests pass.</p> </li> </ol> <p>Run the test suite to confirm your changes haven't introduced any bugs.</p> <pre><code>  hatch test\n</code></pre> <ol> <li>Run linting and formatting.</li> </ol> <p>This ensures your code meets the project's quality standards.</p> <pre><code>  hatch lint:check-all\n</code></pre> <ol> <li>Commit your changes.</li> </ol> <p>This helps maintain a clean and descriptive commit history.    Using Conventional Commits:</p> <pre><code>  feat: add new feature\n  fix: fix bug or correct some handling\n  docs: update documentation\n</code></pre> <ol> <li>Push your branch and open a Pull Request.</li> </ol> <p>Push your changes to your fork and then open a pull request against the main repository</p>"},{"location":"community/contributing/#coding-standards","title":"\ud83d\udcd6 Coding Standards","text":"<ul> <li>Python 3.11+ only</li> <li>Follow PEP 8 with additional   style enforced by Ruff</li> <li>Use type hints everywhere</li> <li>Write docstrings in Google style</li> <li>Keep functions small and focused</li> <li>Add or update tests for all changes</li> </ul>"},{"location":"community/contributing/#testing","title":"\ud83e\uddea Testing","text":"<p>We use pytest and pytest-mock. Run tests:</p> <pre><code>   hatch test\n</code></pre> <p>Run a specific test file:</p> <pre><code>   hatch shell test.py3.13\n   hatch run pytest tests/test_my_feature.py\n</code></pre> <p>Run with coverage:</p> <pre><code>   hatch run test:coverage\n</code></pre>"},{"location":"community/contributing/#translations","title":"\ud83c\udf0d Translations","text":"<p>jm-python-template supports internationalization (i18n) for both Python and Qt components. If you\u2019d like to contribute translations, please follow the steps below.</p>"},{"location":"community/contributing/#update-babel-po-translations-python","title":"Update Babel (.po) Translations (Python)","text":"<ol> <li>Extract and update translation strings for all languages:</li> </ol> <pre><code>  task extract-translations\n</code></pre> <ol> <li> <p>Edit the generated <code>.po</code> files under <code>src/jm-python-template/locales/&lt;lang&gt;/LC_MESSAGES/</code></p> </li> <li> <p>Compile the translations (optional, usually handled by task):</p> </li> </ol> <pre><code>  task compile-translations\n</code></pre>"},{"location":"community/contributing/#update-qt-translations-tsqm","title":"Update Qt Translations (.ts/.qm)","text":"<ol> <li>Update Qt .ts and .qm files for GUI components:</li> </ol> <pre><code>    task extract-qt-translations\n</code></pre> <ol> <li> <p>Edit the generated .ts files under src/jm-python-template/gui/translations/.</p> </li> <li> <p>Compile resources (handled automatically by translate-qt):</p> </li> </ol> <pre><code>    task compile-translations\n</code></pre>"},{"location":"community/contributing/#releases-maintainers-only","title":"\ud83d\udce6 Releases (Maintainers only)","text":"<p>Releases are managed with Hatch.</p> <ol> <li>Update the version:</li> </ol> <pre><code>   hatch version minor\n</code></pre> <ol> <li> <p>Commit with chore: <code>release vX.Y.Z</code></p> </li> <li> <p>Create a GitHub release and tag</p> </li> <li> <p>Publish with:</p> </li> </ol> <pre><code>hatch build\nhatch publish\n</code></pre>"},{"location":"community/contributing/#license","title":"\ud83d\udcc4 License","text":"<p>Contributions to this project are licensed under the EUPL-1.2.</p>"},{"location":"community/contributing/#thank-you","title":"\ud83d\ude4f Thank You","text":"<p>Your contributions make jm-python-template better for everyone. We truly appreciate your time, effort, and ideas \ud83d\udc99</p>"},{"location":"community/faq/","title":"FAQ","text":""},{"location":"community/faq/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"developer-guide/","title":"Developer Guide","text":""},{"location":"developer-guide/#developer-guide","title":"Developer guide","text":"<p>This section is for contributors. It should provide everything a developer needs to work on the project.</p>"},{"location":"developer-guide/#development-setup","title":"Development setup","text":"<p>How to clone the repository and set up the local development environment using hatch.</p>"},{"location":"developer-guide/#running-tests","title":"Running tests","text":"<p>The Hatch command to run tests (hatch run test).</p>"},{"location":"developer-guide/#contributing","title":"Contributing","text":"<p>Guidelines for pull requests, code style (linking to your ruff and pyright configurations), and a general contribution policy.</p>"},{"location":"developer-guide/security/","title":"Security","text":""},{"location":"developer-guide/security/#security-policy","title":"Security policy","text":""},{"location":"developer-guide/security/#supported-versions","title":"Supported versions","text":"<p>At the moment jm-python-template only considers the latest commit to be supported. We combine that with our fast response to incidents and the automated updates to minimize the time between vulnerability publication and patch release.</p> Version Supported master other commits <p>In the near future we will introduce versioning, so expect this section to change.</p>"},{"location":"developer-guide/security/#reporting-a-vulnerability","title":"Reporting a vulnerability","text":"<p>Don't submit an issue or pull request: this might reveal the vulnerability.</p> <p>Please submit your vulnerability report to GitHub advisories.</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#getting-started","title":"Getting started","text":"<p>This section should be a simple tutorial for a new user to install and run the project.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>List any software required for example Python 3.11+).</p> <ul> <li>Python 3.11+</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>Provide the exact command to install the package using pip or hatch.</p>"},{"location":"getting-started/#basic-usage","title":"Basic usage","text":"<p>A step-by-step guide to run the simplest example.</p>"},{"location":"user-guide/","title":"User Guide","text":""},{"location":"user-guide/#user-guide","title":"User guide","text":"<p>This is where you explain the \"what\" and \"how\" of your project's features.</p>"},{"location":"user-guide/#configuration","title":"Configuration","text":"<p>Explain how users can configure the project, including examples of the <code>pyproject.toml</code> or <code>config.toml</code> file.</p>"},{"location":"user-guide/#command-line-commands","title":"Command line commands","text":"<p>If your project has a command-line interface, document each command, its arguments, and options. Using a tool like mkdocs-typer2 can automate this.</p> <pre><code>::: mkdocs-typer2\n:module: jm_python_template.main\n:name: mkdocs-typer2\n:pretty: true\n</code></pre>"},{"location":"user-guide/#app","title":"app","text":"<p>Demo CLI</p>"},{"location":"user-guide/#usage","title":"Usage","text":"<p><code>app [OPTIONS] COMMAND [ARGS]...</code></p>"},{"location":"user-guide/#arguments","title":"Arguments","text":"<p>No arguments available</p>"},{"location":"user-guide/#options","title":"Options","text":"Name Description Required Default <code>--install-completion</code> Install completion for the current shell. No - <code>--show-completion</code> Show completion for the current shell, to copy it or customize the installation. No - <code>--help</code> Show this message and exit. No -"},{"location":"user-guide/#commands","title":"Commands","text":"Name Description <code>comma</code> Main function of the application. <code>docs</code> Generate docs for a project. <code>hello</code> Some docstring content."},{"location":"user-guide/#sub-commands","title":"Sub Commands","text":""},{"location":"user-guide/#app-comma","title":"<code>app comma</code>","text":"<p>Main function of the application.</p> <p>Args:     name (str): The name to greet.     _version (Optional): Whether to print the version.</p> <p>Returns:     None</p>"},{"location":"user-guide/#usage_1","title":"Usage","text":"<p><code>app comma [OPTIONS]</code></p>"},{"location":"user-guide/#arguments_1","title":"Arguments","text":"<p>No arguments available</p>"},{"location":"user-guide/#options_1","title":"Options","text":"Name Description Required Default <code>--name TEXT</code> [default: World] No - <code>--help</code> Show this message and exit. No -"},{"location":"user-guide/#app-docs","title":"<code>app docs</code>","text":"<p>Generate docs for a project.</p>"},{"location":"user-guide/#usage_2","title":"Usage","text":"<p><code>app docs [OPTIONS]</code></p>"},{"location":"user-guide/#arguments_2","title":"Arguments","text":"<p>No arguments available</p>"},{"location":"user-guide/#options_2","title":"Options","text":"Name Description Required Default <code>--name TEXT</code> The name of the project Yes - <code>--help</code> Show this message and exit. No -"},{"location":"user-guide/#app-hello","title":"<code>app hello</code>","text":"<p>Some docstring content.</p>"},{"location":"user-guide/#usage_3","title":"Usage","text":"<p><code>app hello [OPTIONS] NAME</code></p>"},{"location":"user-guide/#arguments_3","title":"Arguments","text":"Name Description Required <code>NAME</code> The name of the person to greet Yes"},{"location":"user-guide/#options_3","title":"Options","text":"Name Description Required Default <code>--color TEXT</code> The color of the output No - <code>--help</code> Show this message and exit. No -"},{"location":"user-guide/#advanced-usage","title":"Advanced usage","text":"<p>Describe more complex use cases or features.</p>"},{"location":"includes/abbreviations/","title":"Abbreviations","text":""}]}