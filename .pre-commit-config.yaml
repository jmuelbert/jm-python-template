---
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
exclude: (?x)(
  LICENSE|
  LICENSES/|
  pnpm-lock.yaml|
  ^\.github/styles/Microsoft/
  )
ci:
  autofix_commit_msg: ðŸŽ¨ [pre-commit.ci] Auto format from pre-commit.com hooks
  autoupdate_commit_msg: â¬† [pre-commit.ci] pre-commit autoupdate
fail_fast: false

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-yaml
        args: [--allow-multiple-documents]
        exclude: mkdocs.yml
      - id: check-toml
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-json
        exclude: (?x)(
          ^\.devcontainer/.*\.json$ |
          ^\.vscode/.*\.json$
          )
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key
      - id: debug-statements
      - id: check-builtin-literals

  # ------------------------
  # Git / commit checks
  # ------------------------
  - repo: https://github.com/mxr/sync-pre-commit-deps
    rev: v0.0.3
    hooks:
      - id: sync-pre-commit-deps

  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v4.2.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      # - id: git-check # Configure in .gitattributes
      #  exclude: ^\.github/workflows/styles/Microsoft/
      - id: git-dirty # Configure in .gitignore
      - id: shellcheck

  # ------------------------
  # Python linting
  # ------------------------
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.13.0
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # ------------------------
  # YAML linting
  # ------------------------
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.37.1
    hooks:
      - id: yamllint
        name: yamllint (general yaml)
        args: [-c, .yamllint]
        files: \.(yaml|yml)$
        exclude: ^\.github/workflows/

      # ------------------------
      # YAML linting for GitHub workflows
      # ------------------------
      - id: yamllint
        name: yamllint (github workflows)
        args: [-c, .github/.yamllint]
        files: (^\.github/workflows/.*\.(ya?ml)$|^\.github/actions/.*\.(ya?ml)$)

  # ------------------------
  # GitHub Actions checks
  # ------------------------
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint
        name: actionlint (github workflows)
        files: (^\.github/workflows/.*\.(ya?ml)$)

  # ------------------------
  # GitHub JSON & project validation
  # ------------------------
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.33.3
    hooks:
      - id: check-compose-spec
        name: Check Docker Compose Specification
        description: Validates docker-compose.yml files.
        args: [--verbose]
        # The `files` regex ensures the hook only runs on this specific file.
        files: (?i)docker-compose\.ya?ml$
      - id: check-dependabot
        name: Check Dependabot configuration
        description: Validates .github/dependabot.yml.
        args: [--verbose]
        # The `files` regex ensures the hook only runs on this specific file.
        files: ^\.github/dependabot\.yml$
      - id: check-github-actions
        name: Check GitHub Actions configuration
        description: Validates the action.yml file for a custom action.
        args: [--verbose] # This hook targets action definition files, which
        # are often in a subdirectory.
        files: ^(\.github/actions/.*|action)\.ya?ml$
      - id: check-github-workflows
        name: Check GitHub Workflows
        description: Validates all yaml files in .github/workflows.
        args: [--verbose]
        # The `files` regex targets all YAML files
        #  within the workflows directory.
        files: ^\.github/workflows/.*\.ya?ml$
      - id: check-gitlab-ci
        name: Check GitLab CI Configuration
        description: Validates the .gitlab-ci.yml file.
        args: [--verbose]
        # The `files` regex targets the GitLab CI configuration file.
        files: ^\.gitlab-ci\.ya?ml$
      - id: check-readthedocs
        name: Check ReadTheDocs Configuration
        description: Validates the configuration for ReadTheDocs.
        args: [--verbose]
        # The `files` regex targets the ReadTheDocs configuration file.
        files: ^\.readthedocs\.ya?ml$
      - id: check-taskfile
        name: Check Taskfile Configuration
        description: Validates the configuration for Taskfile.
        args: [--verbose]
        # The `files` regex targets the Taskfile configuration file.
        files: (?i)taskfile\.ya?ml$

  # ------------------------
  # Secrets Detection
  # ------------------------
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks
        args: [--config, .github/config/gitleaks.toml]

  # ------------------------
  # pyproject.toml validation
  # ------------------------
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.24.1
    hooks:
      - id: validate-pyproject
        name: Validate pyproject.toml

  # ------------------------
  # Pre-commit meta checks
  # ------------------------
  - repo: meta
    hooks:
      - id: check-hooks-apply
      - id: check-useless-excludes
