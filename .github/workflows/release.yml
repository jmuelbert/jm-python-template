---
# SPDX-License-Identifier: EUPL-1.2
# SPDX-FileCopyrightText: 2025-present Jürgen Mülbert <juergen.muelbert@outlook.de>

name: Release Pipeline
on:
  push:
    branches:
      - main
      - release/*
    tags:
      - v*.*.*

defaults:
  run:
    shell: bash

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write # To upload artifacts

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a  # v2.13.1
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: 🔧 Call Python Environment Setup
        uses: ./.github/actions/python-setup

      - name: 📦 Get Project Version and Build
        run: |
          hatch version
          hatch build
          echo "PROJECT_VERSION=$(hatch version)" >> "$GITHUB_ENV"

      - name: 📚 Compile Translations
        uses: arduino/task-action@b91d5d2c96a56797b48ac1e0e89220bf64044611  # v2.0.0
        with:
          version: 3.31.0
          args: compile-babel-translations

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: dist
          path: dist/
          if-no-files-found: error

  validate-dist:
    name: Validate Distribution
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read # To download artifacts

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a  # v2.13.1
        with:
          egress-policy: audit

      - name: 🔧 Call Python Environment Setup
        uses: ./.github/actions/python-setup

      - name: 📥 Download Artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: dist
          path: dist/

      - name: 🔍 Twine Check
        run: |
          hatch env run --env dev twine check dist/*

  publish-and-release:
    name: Publish and Create Release
    needs: [validate-dist]
    runs-on: ubuntu-latest
    permissions:
      contents: write # For creating the release and tag
      id-token: write # For OIDC trusted publishing to PyPI

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a  # v2.13.1
        with:
          egress-policy: audit

      - name: 📥 Download Artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: dist
          path: dist/

      - name: 📢 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # v1.13.0
        if: startsWith(github.ref, 'refs/tags/v')

      - name: 📢 Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # v1.13.0
        if: contains(github.ref, 'release/')
        with:
          repository-url: https://test.pypi.org/legacy/

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836  # v2.3.3
        with:
          # Automatically generates release notes from the tag
          generate_release_notes: true
          # The softprops action needs `GITHUB_TOKEN` to create the release
          token: ${{ secrets.GITHUB_TOKEN }}
