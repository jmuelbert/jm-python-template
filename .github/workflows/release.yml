---
# SPDX-License-Identifier: EUPL-1.2
# SPDX-FileCopyrightText: 2025-present Jürgen Mülbert <juergen.muelbert@outlook.de>

name: Release Pipeline
on:
  push:
    tags:
      - v*.*.*
  release:
    types: [published]
permissions:
  contents: write
  id-token: write
jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - name: 🧐 Checkout Repository
        uses: actions/checkout@v4
      - name: Call Python Environment Setup
        uses: ./.github/actions/python-setup
      - name: Get Project Version
        id: version
        run: echo "version=$(hatch version)" >> "$GITHUB_OUTPUT"

      - name: 📚 Compile Translations
        uses: arduino/task-action@v2
        with:
          version: 3.31.0
          args: compile-babel-translations

      - name: 📦 Build Python Package
        run: hatch build

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  validate-dist:
    name: Validate Distribution
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 🔍 Twine Check
        run: python -m twine check dist/*

  test-pypi-upload:
    name: Create Test-Release & Publish to PyPi
    needs: [validate-dist]
    if: github.event.release.prerelease == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: 📢 Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

  release:
    name: Full Release → PyPI
    needs: [validate-dist]
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    permissions:
      contents: write
      id-token: write
    steps:
      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: 📢 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
        with:
          body: ${{steps.github_release.outputs.changelog}}
