# SPDX-License-Identifier: EUPL-1.2
# SPDX-FileCopyrightText: 2025-present J√ºrgen M√ºlbert <juergen.muelbert@outlook.de>
#
name: Sync Labels
on:
  push:
    paths:
      - .github/labels.yml
      - .github/labeler.yml
      - .github/workflows/labels-sync.yml
  schedule:
    - cron: 0 0 * * 0 # Weekly on Sunday
  workflow_dispatch:
permissions:
  contents: read
  issues: write
  pull-requests: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  sync-labels:
    name: Sync Labels
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: üîí Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a #v2.13.1
        with:
          egress-policy: audit

      - name: üß∞ Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: üè∑Ô∏è Sync Labels
        uses: EndBug/label-sync@52074158190acb45f3077f9099fea818aa43f97a #v2.3.3
        with:
          config-file: .github/labels.yml
          delete-other-labels: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: üîß Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: üì¶ Install dependencies
        run: |
          pnpm install
          pnpm add yaml chalk
      - name: üìù Generate Report
        if: always()
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd #v8.0.0

        with:
          # yamllint disable-line rule:indentation
          script: |
            const fs = require('fs');
            const yaml = require('yaml');
            const chalk = require('chalk');

            // Load configurations
            const labelConfig = yaml.parse(
              fs.readFileSync('.github/labels.yml', 'utf8')
            );
            const labelerConfig = yaml.parse(
              fs.readFileSync('.github/labeler.yml', 'utf8')
            );

            let summary = `### üè∑Ô∏è Label Sync Report\n\n`;

            // Analyze configurations
            const labelNames = new Set(labelConfig.map(l => l.name));
            const labelerRules = new Set(Object.keys(labelerConfig));

            // Find mismatches
            const missingLabels = [...labelerRules].filter(r => !labelNames.has(r));
            const unusedLabels = [...labelNames].filter(l => !labelerRules.has(l));

            // Generate statistics
            summary += `### Statistics\n`;
            summary += `- Total Labels: ${labelNames.size}\n`;
            summary += `- Total Labeler Rules: ${labelerRules.size}\n`;
            summary += `- Missing Labels: ${missingLabels.length}\n`;
            summary += `- Unused Labels: ${unusedLabels.length}\n\n`;

            if (missingLabels.length > 0) {
              summary += `### ‚ö†Ô∏è Missing Labels\n`;
              missingLabels.forEach(label => {
                summary += `- \`${label}\`: Used in labeler but not defined\n`;
              });
              summary += `\n`;
            }

            if (unusedLabels.length > 0) {
              summary += `### ‚ÑπÔ∏è Unused Labels\n`;
              unusedLabels.forEach(label => {
                summary += `- \`${label}\`: Defined but not used in labeler\n`;
              });
              summary += `\n`;
            }

            // Create issue if there are problems
            if (missingLabels.length > 0) {
              await github.rest.issues.create({
                ...context.repo,
                title: 'üè∑Ô∏è Label Configuration Needs Attention',
                body: summary,
                labels: ['automation', 'documentation']
              });
            }

            // Add report to workflow summary
            await core.summary
              .addHeading('Label Sync Results')
              .addRaw(summary)
              .write();

        # yamllint enable-line rule:indentation
