---
# SPDX-License-Identifier: EUPL-1.2
# SPDX-FileCopyrightText: 2025-present Jürgen Mülbert <juergen.muelbert@outlook.de>

name: Core CI
run-name: "${{ github.event_name == 'workflow_dispatch' && format('CI: {0}', github.ref_name) || '' }}"
on:
  push:
    branches: [main, develop]
    paths:
      - src/**
      - tests/**
      - pyproject.toml
      - .github/workflows/ci.yml
      - .github/actions/**
  pull_request:
    types: [opened, synchronize, reopened]

defaults:
  run:
    shell: bash

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a #v2.13.1
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          fetch-depth: 0

      - name: 🔧 Call Python Environment Setup
        uses: ./.github/actions/python-setup
        id: python-setup

      # Lint the Codebase
      - name: ▶️ Run lint Codebase
        run: hatch run dev:lint

      - name: 🔧 Setup PNPM
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda #v4.1.0
        with:
          version: 10
          run_install: false

      - name: 🔧 Install Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 #v5.0.0
        with:
          node-version: 24
          cache: pnpm

      - name: 🔧 Install tools
        run: pnpm install

      # Lint prettier.
      - name: Lint prettier.
        run: pnpm run lint:prettier

      - name: 🔍 Trivy Security Scan
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 #v0.33.1
        with:
          scan-type: fs
          scan-ref: .
          severity: CRITICAL,HIGH

  tests:
    name: Test with ${{ matrix.os }}
    needs: lint-and-format
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a #v2.13.1
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: 🔧 Call Python Environment Setup
        uses: ./.github/actions/python-setup
        id: python-setup

      - name: 🧪📊 Run tests and coverage
        run: |
          hatch test --cover -all

      - name: 📤 Upload coverage data
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: coverage-data-${{ matrix.os }}
          path: ./.coverage
          include-hidden-files: true
          if-no-files-found: error
          retention-days: 3

  combine-and-badge:
    runs-on: ubuntu-latest
    needs: tests
    # if: github.ref == 'refs/heads/main'
    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a #v2.13.1
        with:
          egress-policy: audit

      - name: 🧰 Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      # Download artifacts without merging, each goes into its own folder
      - name: 📥 Download Coverage Data (Windows)
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 #v5.0.0
        with:
          name: coverage-data-windows-latest
          path: coverage-data/windows

      - name: 📥 Download Coverage Data (Ubuntu)
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 #v5.0.0
        with:
          name: coverage-data-ubuntu-latest
          path: coverage-data/ubuntu

      - name: 📥 Download Coverage Data (macOS)
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 #v5.0.0
        with:
          name: coverage-data-macos-latest
          path: coverage-data/macos

      - name: Show data for Debug
        run: |
          echo "Coverage data for Debug:"
          ls -Rlah coverage-data

      - name: Setup Python
        uses: ./.github/actions/python-setup
        id: python-setup

      - name: Combine coverage data
        run: |
          pip install coverage

      # The key step: Use 'coverage combine' to merge the files
      - name: 📂 Combine Coverage Files
        run: coverage combine --rcfile=pyproject.toml coverage-data/**/.coverage

      - name: Generate final coverage.xml
        run: coverage xml --rcfile=pyproject.toml

      - name: 📢 Push Coverage Badge JSON
        run: bash .github/scripts/update-coverage-badge

      - name: Git Auto Commit
        uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 #v6.0.1
        with:
          commit_message: "chore: update coverage badge"
          file_pattern: .github/badges/coverage.json

  verify:
    needs: [lint-and-format, tests]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 🔒 Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a #v2.13.1
        with:
          egress-policy: audit

      - name: ✅ Verify Workflow Completion
        uses: re-actors/alls-green@223e4bb7a751b91f43eda76992bcfbf23b8b0302 # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
